{"version":3,"sources":["services/jobService.js","storeContext.js","styles/global.js","components/Header/styles.js","components/Header/index.js","components/Jobs/styles.js","components/Tag/styles.js","components/Tag/index.js","components/Job/styles.js","components/Job/index.js","components/Pagination/styles.js","components/Pagination/index.js","components/Jobs/index.js","components/Button/styles.js","components/Search/styles.js","components/Search/index.js","App.js","serviceWorker.js","index.js"],"names":["URLS","api","axios","create","jobService","getAll","a","data","url","get","then","res","item","push","StoreContext","createContext","StoreProvider","props","useState","jobs","setJobs","cjobs","setCjobs","useEffect","storeData","Provider","value","useStoreContext","useContext","createGlobalStyle","Container","styled","div","Header","className","table","Tag","onClick","onSelect","text","onClose","class","tr","Column","td","logo","css","labels","Link","Job","job","href","html_url","target","title","map","index","name","key","Date","created_at","toLocaleString","Page","Pagination","perPage","cPage","currentPage","arr","chunk_sz","chunks","i","length","slice","chunkArray","totalPages","pages","page","Jobs","setCPage","jobsOnPage","setJobsOnPage","x","colSpan","button","Box","SearchBar","Input","input","Tags","Info","h3","Search","tags","setTags","stags","setStags","setText","orderBy","sortBy","undefined","words","toLowerCase","replace","trim","split","filter","inTitle","inBody","body","word","includes","forEach","l","ok","label","sort","b","temp","Array","from","Set","onChange","e","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.579640c5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URLS = [\r\n\t'https://api.github.com/repos/frontendbr/vagas/issues?per_page=100',\r\n\t//'https://api.github.com/repos/backend-br/vagas/issues'\r\n];\r\n\r\nconst api = axios.create({});\r\n\r\nconst jobService = {\r\n    getAll: async () => {\r\n        let data = [];\r\n        for(let url of URLS) {\r\n            await api.get(url).then( (res) => {\r\n                for(let item of res.data) {\r\n                    data.push(item);\r\n                }\r\n            });\r\n\t\t}\r\n\t\treturn data;\r\n    }\r\n};\r\n\r\nexport default jobService;","import React, {createContext, useState, useContext, useEffect} from 'react';\r\n\r\nimport jobService from './services/jobService';\r\n \r\nexport const StoreContext = createContext();\r\n\r\nconst StoreProvider = (props) => {\r\n\tconst [jobs,setJobs] = useState([]);\r\n\tconst [cjobs, setCjobs] = useState([]);\r\n\r\n\tuseEffect( () => {\r\n\t\tjobService.getAll().then(res => {\r\n\t\t\tsetCjobs(res);\r\n\t\t\tsetJobs(res);\r\n\t\t});\r\n\t}, []);\r\n\tconst storeData = {\r\n\t\tjobs, setJobs,\r\n\t\tcjobs, setCjobs\r\n\t}\r\n\r\n\treturn <StoreContext.Provider value={storeData} {...props}/>\r\n}\r\n\r\n\r\nconst useStoreContext = () => {\r\n\treturn useContext(StoreContext);\r\n}\r\n\r\nexport {StoreProvider, useStoreContext};","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    \r\n    html, body, #root {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 70px;\r\n\tmargin-bottom: 30px;\r\n    background-color: grey;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .logo {\r\n        font-size: 2rem;\r\n    }\r\n`;","import React from 'react';\r\nimport {Container} from './styles';\r\n\r\n\r\nexport default function Header() {\r\n    return <Container>\r\n        <p className=\"logo\">\r\n            JobLister\r\n        </p>\r\n    </Container>\r\n}\r\n\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.table`\r\n    display: table;\r\n\ttable-layout: auto;\r\n\tmargin: 10px 0;\r\n    width: 100%;\r\n\r\n\tborder-collapse: collapse;\r\n  \tborder-radius: 1em;\r\n  \toverflow: hidden;\r\n\r\n\tth, td {\r\n  \t\tpadding: 1em;\r\n  \t\tbackground: #ddd;\r\n  \t\tborder-bottom: 2px solid white; \r\n\t}\r\n\ttr { \r\n    \tdisplay: table-row; \r\n\t}\r\n\ttd { \r\n    \tdisplay: table-cell;\r\n\t}\r\n\ttfoot {\r\n\t\tdisplay: table-header-group;\r\n    \tvertical-align: middle;\r\n    \tborder-color: inherit;\r\n\t\tjustify-content: center;\r\n\t\ttd {\r\n\t\t\tjustify-content: center;\r\n\t\t\tpadding: 0;\r\n\t\t\tbackground: inherit;\r\n\t\t\tborder-bottom: 0;\r\n\t\t\tmargin-top: 30px;\r\n\t\t}\r\n\t}\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n\tposition: relative;\r\n    padding: 8px 5px;\r\n    background-color: #313131;\r\n    color: #999;\r\n    border-width: 1px 1px 2px 1px;\r\n    border-style: solid;\r\n    border-color: #222;\r\n    border-radius: 5px;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    font-size: .75em;\r\n    line-height: 1em;\r\n    box-shadow: 1px 1px 0 rgba(0,0,0,0.5);\r\n\r\n\tmargin: 5px 5px;\r\n\t.close {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tright: 0;\r\n\t}\r\n\t:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tuser-select: none\r\n`;","import React from 'react';\r\n\r\nimport {Container} from './styles';\r\n\r\nexport default function Tag(props) {\r\n    return <Container onClick={() => props.onSelect && props.onSelect(props.text)}>\r\n        {props.text}\r\n\t\t{props.onClose &&\r\n\t\t\t<div class=\"close\" onClick={props.onClose}>X</div>\r\n\t\t}\r\n    </Container>\r\n}","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.tr`\r\n\theight: 100px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Column = styled.td`\r\n    text-align: center;\r\n    align-items:center;\r\n\t.tags {\r\n\t\tdisplay: flex;\r\n\t\t${props => (props.logo && css`text-align: left;`)\r\n        || (props.labels && css`display:flex;flex-wrap: wrap;`)\r\n    }\r\n`;\r\n\r\nexport const Link = styled.a`\r\n\ttext-decoration: underline;\r\n\tcolor: inherit;\r\n\tfont-size: 1.2rem;\r\n`;","import React, {useEffect} from 'react';\r\n\r\nimport Tag from '../Tag';\r\n\r\nimport {Container, Column, Link } from './styles';\r\n\r\nexport default function Job({job}) {\r\n    return <Container>\r\n\t\t<Column>\r\n\t\t\t<Link href={job.html_url} target=\"_blank\">\r\n\t\t\t\t{job.title}\r\n\t\t\t</Link>\r\n\t\t</Column>\r\n\t\t<Column labels>\r\n\t\t\t<div className=\"tags\">\r\n\t\t\t{ job.labels.map( (item, index) => \r\n\t\t\t\t<Tag text={item.name} key={index}/>\r\n\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Column>\r\n\t\t<Column>\r\n\t\t{ new Date(job.created_at).toLocaleString()}\r\n\t\t</Column>\r\n    </Container>\r\n}","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin-top: 25px;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 32px;\r\n\theight: 32px;\r\n\tborder-radius: 50%;\r\n\tbackground-color: #b5c7c5;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    line-height: 30px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\r\n\tmargin-left: 5px;\r\n\ttransition: transform .2s ease-in-out;\r\n\t:hover {\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\tcursor: pointer;\r\n\r\n\t&.selected {\r\n\t\tbackground-color: #3bb33b;\r\n        color: white;\r\n\t}\r\n`; ","import React, { useEffect } from 'react';\r\n\r\nimport {Container, Page} from './styles';\r\n\r\nlet chunkArray = (arr, chunk_sz) => {\r\n\tlet chunks = [];\r\n\tlet i = 0;\r\n\twhile(i < arr.length) {\r\n\t\tchunks.push(arr.slice(i, i += chunk_sz));\r\n\t}\r\n\treturn chunks;\r\n};\r\n\r\nexport default function Pagination(props) {\r\n\tlet perPage = props.perPage || 10;\r\n\tlet cPage = props.currentPage || 0;\r\n\tlet data = chunkArray(props.data, perPage);\r\n\r\n\tlet totalPages = data.length;\r\n\r\n\tlet pages = [0];\t\r\n\tif(cPage - 2 > 0) {\r\n\t\tpages.push(cPage - 2);\r\n\t}\r\n\tif(cPage - 1 > 0) {\r\n\t\tpages.push(cPage - 1);\r\n\t}\r\n\tif(cPage > 0) {\r\n\t\tpages.push(cPage);\r\n\t}\r\n\tif(cPage + 1 < totalPages) {\r\n\t\tpages.push(cPage + 1);\r\n\t}\r\n\tif(cPage + 2 < totalPages) {\r\n\t\tpages.push(cPage + 2);\r\n\t}\r\n\tif(cPage + 3 < totalPages) {\r\n\t\tpages.push(totalPages - 1);\r\n\t}\r\n\tfunction onSelect(page) {\r\n\t\tif(props.onSelect) {\r\n\t\t\tprops.onSelect(page, data[page]);\r\n\t\t}\r\n\t}\r\n\tuseEffect( () => {\r\n\t\tprops.onSelect(cPage, data[cPage]);\r\n\t}, []);\r\n\r\n\treturn <Container>\r\n\t\t{pages.map( (item, index) => {\r\n\t\t\treturn <Page className={cPage === item && \"selected\"} key={index} onClick={() => onSelect(item)}>{item + 1}</Page>\r\n\t\t})}\r\n\t</Container>\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport {useStoreContext} from '../../storeContext';\r\n\r\nimport {Container} from './styles';\r\nimport Job from '../Job';\r\nimport Pagination from '../Pagination';\r\n\r\n\r\nlet chunkArray = (arr, chunk_sz) => {\r\n\tlet chunks = [];\r\n\tlet i = 0;\r\n\twhile(i < arr.length) {\r\n\t\tchunks.push(arr.slice(i, i += chunk_sz));\r\n\t}\r\n\treturn chunks;\r\n};\r\n\r\nexport default function Jobs() {\r\n\tconst {cjobs, setCjobs} = useStoreContext();\r\n\tconst [cPage, setCPage] = useState(0);\r\n\tconst perPage = 10;\r\n\tconst [jobsOnPage, setJobsOnPage] = useState([]);\r\n\tlet onSelect = (page, data) => {\r\n\t\tsetCPage(page);\r\n\t\tsetJobsOnPage([...data]);\r\n\t}\r\n\r\n\tuseEffect( () => {\r\n\t\tsetCPage(x => 0);\r\n\t\tif(cjobs) {\r\n\t\t\tlet data = chunkArray(cjobs, perPage);\r\n\t\t\tif(data.length) {\r\n\t\t\t\tsetJobsOnPage([...data[cPage]]);\r\n\t\t\t}\r\n\t\t}\r\n\t},[cjobs])\r\n    return cjobs.length > 0 && <Container>\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th>Title</th>\r\n\t\t\t\t<th>Tags</th>\r\n\t\t\t\t<th>Date</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody>\r\n\t\t\t{jobsOnPage.map((item, index) => <Job key={index} job={item}></Job>)}\r\n\t\t</tbody>\r\n\t\t<tfoot>\r\n    \t\t<tr>\r\n\t\t\t\t<td colSpan=\"3\"><Pagination data={cjobs} onSelect={onSelect} perPage={perPage} currentPage={cPage}/></td>\r\n    \t\t</tr>\r\n\t\t</tfoot>\r\n    </Container>\r\n}","import styled from 'styled-components'\r\n\r\nexport const Container = styled.button`\r\n    text-align: center;\r\n\tborder-radius: 3px;\r\n\tbackground-color: #d0def5;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    border: 1px solid #fff;\r\n    border-radius: 8px;\r\n    padding: 6px 15px;\r\n\toutline: 0;\r\n`;","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n    margin: 0 auto;\r\n\twidth: 50%;\r\n\tmargin-bottom: 75px;\r\n\r\n\t@media(max-width: 800px) {\r\n\t\twidth: 85%;\r\n\t}\r\n` \r\nexport const SearchBar = styled.div`\r\n\twidth: 100%;\r\n\theight: 25px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t*{\r\n\t\tmargin-left: 10px;\r\n\t}\r\n`; \r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport const Info = styled.h3`\r\n\ttext-align: center;\r\n\tmargin: 15px 0;\r\n`;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport Button from '../Button';\r\nimport Tag from '../Tag';\r\nimport { Container, Box, Input, SearchBar, Tags, Info} from './styles';\r\n\r\n\r\nimport {useStoreContext} from '../../storeContext';\r\n\r\nexport default function Search() {\r\n\tconst [tags, setTags] = useState([]);\r\n\tconst [stags, setStags] = useState([]);\r\n\r\n\tconst [text, setText] = useState();\r\n\tconst [orderBy, setOrderBy] = useState(true)\r\n\tconst {jobs, cjobs, setCjobs, setJobs} = useStoreContext();\r\n\r\n\tconst sortBy = ({text = undefined, tags = [], orderBy = 0} = {}) => {\r\n\t\tif (text === tags && text === orderBy && tags.length === 0) {\r\n\t\t\tsetCjobs([...jobs]);\r\n\t\t} else {\r\n\t\t\tlet data = jobs;\r\n\t\t\t\r\n\t\t\tif(text) {\r\n\t\t\t\tlet words = text.toLowerCase().replace(/\\s+/g,' ').trim().split(' ');\r\n\t\t\t\tdata = data.filter(item => {\r\n\t\t\t\t\tlet inTitle = false;\r\n\t\t\t\t\tlet inBody = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet title = item.title.toLowerCase();\r\n\t\t\t\t\tlet body = item.body.toLowerCase();\r\n\r\n\t\t\t\t\tfor(let word of words) {\r\n\t\t\t\t\t\tif(title.includes(word)) {\r\n\t\t\t\t\t\t\tinTitle = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(let word of words) {\r\n\t\t\t\t\t\tif(body.includes(word)) {\r\n\t\t\t\t\t\t\tinBody = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn inTitle || inBody;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (tags.length > 0) {\r\n\t\t\t\tdata = data.filter(item => {\r\n\t\t\t\t\tlet labels = [];\r\n\t\t\t\t\titem.labels.forEach(l => {\r\n\t\t\t\t\t\tlabels.push(l.name.toLowerCase());\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet ok = true;\r\n\t\t\t\t\tfor (let label of tags) {\r\n\t\t\t\t\t\tok = labels.includes(label);\r\n\t\t\t\t\t\tif (!ok) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ok;\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\tif(orderBy) {\r\n\t\t\t\tdata.sort((a,b) => new Date(b.created_at) - new Date(a.created_at) );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdata.sort((a,b) => new Date(a.created_at) - new Date(b.created_at));\r\n\t\t\t}\r\n\t\t\tsetCjobs([...data]);\r\n\t\t}\r\n\t}\r\n\tconst onSearch = (e) => {\r\n\t\tsortBy({text: text, orderBy: orderBy});\r\n\t}\r\n\tconst onReset = () => {\r\n\t\tsetCjobs(jobs);\r\n\t\tsetStags([]);\r\n\t\tsetText(\"\");\r\n\t}\r\n\tconst onSelect = (temp) => {\r\n\t\tlet data = stags;\r\n\t\tif(data.includes(temp)) {\r\n\t\t\tdata = data.filter(x => x !== temp);\r\n\t\t} else {\r\n\t\t\tdata.push(temp);\r\n\t\t}\r\n\t\tsetStags([...data]);\r\n\t\tsortBy({text: text, tags: data, orderBy: orderBy})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tlet labels = [];\r\n\t\tjobs.forEach(item => {\r\n\t\t\titem.labels.forEach(l => {\r\n\t\t\t\tlabels.push(l.name.toLowerCase());\r\n\t\t\t});\r\n\t\t});\r\n\t\tlabels = Array.from(new Set(labels));\r\n\t\tlabels.sort();\r\n\t\tsetTags(labels);\r\n\t},[cjobs,jobs]);\r\n    return <Container>\r\n        <Box>\r\n\t\t\t<SearchBar>\r\n\t\t\t\t<Input value={text} onChange={ (e) => setText(e.target.value)}/>\r\n\t\t\t\t<i class=\"fas fa-search fa-lg\" onClick={onSearch}></i>\r\n\t\t\t\t<i class=\"fas fa-eraser fa-lg\" onClick={onReset}></i>\r\n\t\t\t</SearchBar>\r\n\t\t\t<Info>All available tags</Info>\r\n\r\n\t\t\t<Tags>\r\n\t\t\t\t{tags && tags.map((item, index) => <Tag key={index} text={item} onSelect={onSelect}/>)}\r\n\t\t\t</Tags>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t{stags.length > 0 &&\r\n\t\t\t\t<>\r\n\t\t\t\t<Info>Selected Tags</Info>\r\n\t\t\t\t<Tags>\r\n\t\t\t\t{stags && stags.map((item, index) => <Tag text={item} key={index} onSelect={onSelect}/>)}\r\n\t\t\t\t</Tags>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t<Info>Showing {cjobs.length} of {jobs.length}</Info>\r\n        </Box>\r\n    </Container>\r\n}","import React, { useEffect, useState } from 'react';\nimport {StoreProvider, useStoreContext} from './storeContext';\n\nimport GlobalStyle from './styles/global';\n\nimport Header from './components/Header';\nimport Jobs from './components/Jobs';\nimport Search from './components/Search';\n\nexport default function App() {\n\treturn <StoreProvider>\n\t\t<GlobalStyle />\n\t\t<Header />\n\t\t<Search />\n\t\t<Jobs/>\n\t</StoreProvider>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}